=== md0 -- F2FS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 00:16:00 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    23      1179648         8192      48183.6          6144346
    44      2359296         8192      41519.8          5656843
    66      3538944         8192      36279.1          5648689
    87      4718592         8192      35044.4          5620772
=== md0 -- EXT4 ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 00:18:36 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    19      1179648         8192      30369.8          5715064
    34      2359296         8192      32768.4          5990225
    48      3538944         8192      28622.5          6749734
=== md0 -- XFS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 00:21:31 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    15      1179648         8192      22572.2         10168956
    30      2359296         8192      23490.7         10337442
    45      3538944         8192      21991.5         10266951
    60      4718592         8192      21231.8         10260558
=== md0 -- BTRFS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 00:25:44 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    18      1179648         8192        383.6         18963416
    34      2359296         8192        388.4         19493392
    51      3538944         8192        391.7         19506919
    68      4718592         8192        390.6         19644818
=== nvme0n1p1 -- F2FS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 03:48:31 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    12      1179648         8192      33072.0          8518146
    22      2359296         8192      28431.0          8373666
    33      3538944         8192      25759.0          7999175
    44      4718592         8192      24764.7          7997094
=== nvme0n1p1 -- EXT4 ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 03:51:43 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    12      1179648         8192      16549.4         10036952
    19      2359296         8192      16107.3         10209623
    26      3538944         8192      19338.3          8287625
    33      4718592         8192      16884.4          9789768
=== nvme0n1p1 -- XFS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 03:56:40 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     7      1179648         8192       8741.8         14280345
    15      2359296         8192       9668.9          9622842
    22      3538944         8192       8785.4         12780076
    30      4718592         8192       8716.2         13952782
=== nvme0n1p1 -- BTRFS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 04:05:49 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     8      1179648         8192       5309.9          8730761
    16      2359296         8192       4260.8          9359312
    24      3538944         8192       3872.6          9770337
    32      4718592         8192       3538.0          9745782
=== sdb1 -- F2FS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 04:25:36 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     3      1179648         8192       1713.1         22097244
     6      2359296         8192       1669.1         22349293
     8      3538944         8192       1581.8         21920335
    11      4718592         8192       1572.9         21925802
=== sdb1 -- EXT4 ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 05:14:38 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     6      1179648         8192       1105.9         22435334
     8      2359296         8192        977.8         22557307
    10      3538944         8192        954.6         22641448
    12      4718592         8192        951.4         22756708
=== sdb1 -- XFS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 06:34:37 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     1      1179648         8192       1275.0         23356150
     3      2359296         8192       1171.8         23771061
     5      3538944         8192       1160.0         23420106
     7      4718592         8192       1141.6         23575514
=== sdb1 -- BTRFS ===

#  fs_mark  -d  /mnt/test/1  -d  /mnt/test/2  -d  /mnt/test/3  -d  /mnt/test/4  -D  16  -N  256  -n  294912  -L  4  -S  1  -s  8192 
#	Version 3.3, 4 thread(s) starting at Thu Apr  6 07:41:39 2017
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  Round Robin between directories across 16 subdirectories with 256 files per subdirectory.
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 8192 bytes, written with an IO size of 16384 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     2      1179648         8192        502.8         21563453
     4      2359296         8192        484.0         21788297
     6      3538944         8192        435.6         21621106
     8      4718592         8192        461.7         21531376
